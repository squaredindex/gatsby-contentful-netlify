{"version":3,"file":"react-toggled.umd.js","sources":["../src/index.js"],"sourcesContent":["import {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nconst callAll = (...fns) => (...args) => fns.forEach(fn => fn && fn(...args))\n\nclass Toggle extends Component {\n  static propTypes = {\n    defaultOn: PropTypes.bool,\n    on: PropTypes.bool,\n    onToggle: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.array]).isRequired,\n  }\n  static defaultProps = {\n    defaultOn: false,\n    onToggle: () => {},\n  }\n  state = {\n    on: this.getOn({on: this.props.defaultOn}),\n  }\n\n  getOn(state = this.state) {\n    return this.isOnControlled() ? this.props.on : state.on\n  }\n\n  isOnControlled() {\n    return this.props.on !== undefined\n  }\n\n  getTogglerProps = (props = {}) => ({\n    'aria-expanded': Boolean(this.getOn()),\n    tabIndex: 0,\n    ...props,\n    onClick: callAll(props.onClick, this.toggle),\n  })\n\n  toggleKeys = ['Enter', ' '] // This matches <button> behavior\n\n  getInputTogglerProps = (props = {}) =>\n    this.getTogglerProps({\n      ...props,\n      onKeyUp: callAll(props.onKeyUp, event => {\n        if (event.key === 'Enter') {\n          // <input> already respond to Enter\n          this.toggle()\n        }\n      }),\n    })\n\n  getElementTogglerProps = (props = {}) =>\n    this.getTogglerProps({\n      ...props,\n      onKeyUp: callAll(props.onKeyUp, event => {\n        if (this.toggleKeys.indexOf(event.key) > -1) {\n          this.toggle()\n        }\n      }),\n    })\n\n  getTogglerStateAndHelpers() {\n    return {\n      on: this.getOn(),\n      getTogglerProps: this.getTogglerProps,\n      getInputTogglerProps: this.getInputTogglerProps,\n      getElementTogglerProps: this.getElementTogglerProps,\n      setOn: this.setOn,\n      setOff: this.setOff,\n      toggle: this.toggle,\n    }\n  }\n\n  setOnState = (state = !this.getOn()) => {\n    if (this.isOnControlled()) {\n      this.props.onToggle(state, this.getTogglerStateAndHelpers())\n    } else {\n      this.setState({on: state}, () => {\n        this.props.onToggle(this.getOn(), this.getTogglerStateAndHelpers())\n      })\n    }\n  }\n\n  setOn = this.setOnState.bind(this, true)\n  setOff = this.setOnState.bind(this, false)\n  toggle = this.setOnState.bind(this, undefined)\n\n  render() {\n    const renderProp = unwrapArray(this.props.children)\n    return renderProp(this.getTogglerStateAndHelpers())\n  }\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg\n}\n\nexport default Toggle\n"],"names":["callAll","fns","args","forEach","fn","Toggle","state","getOn","on","props","defaultOn","getTogglerProps","Boolean","onClick","toggle","toggleKeys","getInputTogglerProps","onKeyUp","event","key","getElementTogglerProps","indexOf","setOnState","isOnControlled","onToggle","getTogglerStateAndHelpers","setState","setOn","bind","setOff","undefined","renderProp","unwrapArray","children","Component","propTypes","PropTypes","bool","func","oneOfType","array","isRequired","defaultProps","arg","Array","isArray"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,UAAU;oCAAIC,GAAJ;OAAA;;;SAAY;uCAAIC,IAAJ;UAAA;;;WAAaD,IAAIE,OAAJ,CAAY;aAAMC,MAAMA,oBAAMF,IAAN,CAAZ;KAAZ,CAAb;GAAZ;CAAhB;;IAEMG;;;;;;;;;;;;;;qLAWJC,QAAQ;UACF,MAAKC,KAAL,CAAW,EAACC,IAAI,MAAKC,KAAL,CAAWC,SAAhB,EAAX;aAWNC,kBAAkB;UAACF,KAAD,uEAAS,EAAT;;yBACCG,QAAQ,MAAKL,KAAL,EAAR,CADD;kBAEN;SACPE,KAHa;iBAIPT,QAAQS,MAAMI,OAAd,EAAuB,MAAKC,MAA5B;;aAGXC,aAAa,CAAC,OAAD,EAAU,GAAV,SAEbC,uBAAuB;UAACP,KAAD,uEAAS,EAAT;aACrB,MAAKE,eAAL,cACKF,KADL;iBAEWT,QAAQS,MAAMQ,OAAd,EAAuB,iBAAS;cACnCC,MAAMC,GAAN,KAAc,OAAlB,EAA2B;;kBAEpBL,MAAL;;SAHK;SAHU;aAWvBM,yBAAyB;UAACX,KAAD,uEAAS,EAAT;aACvB,MAAKE,eAAL,cACKF,KADL;iBAEWT,QAAQS,MAAMQ,OAAd,EAAuB,iBAAS;cACnC,MAAKF,UAAL,CAAgBM,OAAhB,CAAwBH,MAAMC,GAA9B,IAAqC,CAAC,CAA1C,EAA6C;kBACtCL,MAAL;;SAFK;SAHY;aAsBzBQ,aAAa,YAA2B;UAA1BhB,KAA0B,uEAAlB,CAAC,MAAKC,KAAL,EAAiB;;UAClC,MAAKgB,cAAL,EAAJ,EAA2B;cACpBd,KAAL,CAAWe,QAAX,CAAoBlB,KAApB,EAA2B,MAAKmB,yBAAL,EAA3B;OADF,MAEO;cACAC,QAAL,CAAc,EAAClB,IAAIF,KAAL,EAAd,EAA2B,YAAM;gBAC1BG,KAAL,CAAWe,QAAX,CAAoB,MAAKjB,KAAL,EAApB,EAAkC,MAAKkB,yBAAL,EAAlC;SADF;;aAMJE,QAAQ,MAAKL,UAAL,CAAgBM,IAAhB,QAA2B,IAA3B,SACRC,SAAS,MAAKP,UAAL,CAAgBM,IAAhB,QAA2B,KAA3B,SACTd,SAAS,MAAKQ,UAAL,CAAgBM,IAAhB,QAA2BE,SAA3B;;;;;4BA9DiB;UAApBxB,KAAoB,uEAAZ,KAAKA,KAAO;;aACjB,KAAKiB,cAAL,KAAwB,KAAKd,KAAL,CAAWD,EAAnC,GAAwCF,MAAME,EAArD;;;;qCAGe;aACR,KAAKC,KAAL,CAAWD,EAAX,KAAkBsB,SAAzB;;;;;gDAiC0B;aACnB;YACD,KAAKvB,KAAL,EADC;yBAEY,KAAKI,eAFjB;8BAGiB,KAAKK,oBAHtB;gCAImB,KAAKI,sBAJxB;eAKE,KAAKO,KALP;gBAMG,KAAKE,MANR;gBAOG,KAAKf;OAPf;;;;6BAyBO;UACDiB,aAAaC,YAAY,KAAKvB,KAAL,CAAWwB,QAAvB,CAAnB;aACOF,WAAW,KAAKN,yBAAL,EAAX,CAAP;;;;EAjFiBS;;;;;;;;;;AAAf7B,OACG8B,YAAY;aACNC,UAAUC,IADJ;MAEbD,UAAUC,IAFG;YAGPD,UAAUE,IAHH;YAIPF,UAAUG,SAAV,CAAoB,CAACH,UAAUE,IAAX,EAAiBF,UAAUI,KAA3B,CAApB,EAAuDC;;AAL/DpC,OAOGqC,eAAe;aACT,KADS;YAEV,oBAAM;;AAkFpB,SAASV,WAAT,CAAqBW,GAArB,EAA0B;SACjBC,MAAMC,OAAN,CAAcF,GAAd,IAAqBA,IAAI,CAAJ,CAArB,GAA8BA,GAArC;;;;;;;;;"}