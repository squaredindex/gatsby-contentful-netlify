{"version":3,"file":"react-toggled.umd.min.js","sources":["../src/index.js"],"sourcesContent":["import {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nconst callAll = (...fns) => (...args) => fns.forEach(fn => fn && fn(...args))\n\nclass Toggle extends Component {\n  static propTypes = {\n    defaultOn: PropTypes.bool,\n    on: PropTypes.bool,\n    onToggle: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.array]).isRequired,\n  }\n  static defaultProps = {\n    defaultOn: false,\n    onToggle: () => {},\n  }\n  state = {\n    on: this.getOn({on: this.props.defaultOn}),\n  }\n\n  getOn(state = this.state) {\n    return this.isOnControlled() ? this.props.on : state.on\n  }\n\n  isOnControlled() {\n    return this.props.on !== undefined\n  }\n\n  getTogglerProps = (props = {}) => ({\n    'aria-expanded': Boolean(this.getOn()),\n    tabIndex: 0,\n    ...props,\n    onClick: callAll(props.onClick, this.toggle),\n  })\n\n  toggleKeys = ['Enter', ' '] // This matches <button> behavior\n\n  getInputTogglerProps = (props = {}) =>\n    this.getTogglerProps({\n      ...props,\n      onKeyUp: callAll(props.onKeyUp, event => {\n        if (event.key === 'Enter') {\n          // <input> already respond to Enter\n          this.toggle()\n        }\n      }),\n    })\n\n  getElementTogglerProps = (props = {}) =>\n    this.getTogglerProps({\n      ...props,\n      onKeyUp: callAll(props.onKeyUp, event => {\n        if (this.toggleKeys.indexOf(event.key) > -1) {\n          this.toggle()\n        }\n      }),\n    })\n\n  getTogglerStateAndHelpers() {\n    return {\n      on: this.getOn(),\n      getTogglerProps: this.getTogglerProps,\n      getInputTogglerProps: this.getInputTogglerProps,\n      getElementTogglerProps: this.getElementTogglerProps,\n      setOn: this.setOn,\n      setOff: this.setOff,\n      toggle: this.toggle,\n    }\n  }\n\n  setOnState = (state = !this.getOn()) => {\n    if (this.isOnControlled()) {\n      this.props.onToggle(state, this.getTogglerStateAndHelpers())\n    } else {\n      this.setState({on: state}, () => {\n        this.props.onToggle(this.getOn(), this.getTogglerStateAndHelpers())\n      })\n    }\n  }\n\n  setOn = this.setOnState.bind(this, true)\n  setOff = this.setOnState.bind(this, false)\n  toggle = this.setOnState.bind(this, undefined)\n\n  render() {\n    const renderProp = unwrapArray(this.props.children)\n    return renderProp(this.getTogglerStateAndHelpers())\n  }\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg\n}\n\nexport default Toggle\n"],"names":["callAll","fns","args","forEach","fn","Toggle","state","_this","getOn","on","props","defaultOn","getTogglerProps","Boolean","onClick","toggle","toggleKeys","getInputTogglerProps","onKeyUp","event","key","getElementTogglerProps","indexOf","setOnState","isOnControlled","onToggle","getTogglerStateAndHelpers","setState","setOn","bind","setOff","undefined","Component","this","arg","children","Array","isArray","propTypes","PropTypes","bool","func","oneOfType","array","isRequired","defaultProps"],"mappings":"w9BAGMA,EAAU,sCAAIC,gDAAQ,sCAAIC,gDAASD,EAAIE,QAAQ,mBAAMC,GAAMA,eAAMF,OAEjEG,iNAWJC,UACMC,EAAKC,OAAOC,GAAIF,EAAKG,MAAMC,eAWjCC,gBAAkB,eAACF,sFACAG,QAAQN,EAAKC,kBACpB,GACPE,WACMV,EAAQU,EAAMI,QAASP,EAAKQ,aAGvCC,YAAc,QAAS,OAEvBC,qBAAuB,eAACP,mEACtBH,EAAKK,qBACAF,WACMV,EAAQU,EAAMQ,QAAS,YACZ,UAAdC,EAAMC,OAEHL,iBAKbM,uBAAyB,eAACX,mEACxBH,EAAKK,qBACAF,WACMV,EAAQU,EAAMQ,QAAS,YAC1BX,EAAKS,WAAWM,QAAQH,EAAMC,MAAQ,KACnCL,iBAiBbQ,WAAa,eAACjB,0DAASC,EAAKC,QACtBD,EAAKiB,mBACFd,MAAMe,SAASnB,EAAOC,EAAKmB,+BAE3BC,UAAUlB,GAAIH,GAAQ,aACpBI,MAAMe,SAASlB,EAAKC,QAASD,EAAKmB,kCAK7CE,MAAQrB,EAAKgB,WAAWM,QAAW,KACnCC,OAASvB,EAAKgB,WAAWM,QAAW,KACpCd,OAASR,EAAKgB,WAAWM,YAAWE,6UA7EjBC,oDAeb1B,yDAAQ2B,KAAK3B,aACV2B,KAAKT,iBAAmBS,KAAKvB,MAAMD,GAAKH,EAAMG,wDAI5BsB,IAAlBE,KAAKvB,MAAMD,iEAmCZwB,KAAKzB,wBACQyB,KAAKrB,qCACAqB,KAAKhB,4CACHgB,KAAKZ,6BACtBY,KAAKL,aACJK,KAAKH,cACLG,KAAKlB,6CA8BEmB,SAAAA,EAXcD,KAAKvB,MAAMyB,SAYrCC,MAAMC,QAAQH,GAAOA,EAAI,GAAKA,GAXjBD,KAAKP,6CAjFrBrB,EACGiC,qBACMC,EAAUC,QACjBD,EAAUC,cACJD,EAAUE,cACVF,EAAUG,WAAWH,EAAUE,KAAMF,EAAUI,QAAQC,YAL/DvC,EAOGwC,yBACM,WACD"}